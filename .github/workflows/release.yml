name: release

on:
  push:
    branches: [ master ]
    paths:
      - 'src/AgentFramework.Kernel/**'
      - 'tests/AgentFramework.Kernel.Tests/**'
      - '.releaserc.json'
      - '.github/workflows/release.yml'
      - 'CHANGELOG.md'
      - 'Directory.*.props'
      - 'package.json'
      - 'package-lock.json'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # semantic-release needs full history & tags

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Node deps
        run: npm ci

      # Build & test BEFORE release; fail fast if something's broken
      - name: Build & Test
        run: |
          dotnet restore
          dotnet build -c Release --no-restore
          dotnet test  -c Release --no-build

      # Decide release, create tag vX.Y.Z, update CHANGELOG, create GH release
      - name: Run semantic-release
        id: sr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release

      # Detect if HEAD is now tagged v* (semantic-release just created it)
      - name: Detect release tag on HEAD
        id: tag
        shell: bash
        run: |
          set -e
          if git describe --exact-match --tags HEAD >/dev/null 2>&1; then
            TAG=$(git describe --exact-match --tags HEAD)
            if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "tag=$TAG" >> "$GITHUB_OUTPUT"
              echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          fi
          echo "No new matching tag on HEAD; skipping pack/publish."
          echo "tag=" >> "$GITHUB_OUTPUT"
          echo "version=" >> "$GITHUB_OUTPUT"

      # Only pack/publish when a new release tag exists on HEAD
      - name: Pack NuGet (MinVer picks up version from tag)
        if: ${{ steps.tag.outputs.tag != '' }}
        run: |
          dotnet pack src/AgentFramework.Kernel/AgentFramework.Kernel.csproj \
            -c Release \
            -o artifacts

      - name: Publish to NuGet
        if: ${{ steps.tag.outputs.tag != '' }}
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push "artifacts/*.nupkg" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Attach package to GitHub Release
        if: ${{ steps.tag.outputs.tag != '' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: artifacts/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify package exists on NuGet (optional)
        if: ${{ steps.tag.outputs.tag != '' }}
        run: |
          NAME="AgentFramework.Kernel"
          VER="${{ steps.tag.outputs.version }}"
          curl -fsSL "https://api.nuget.org/v3-flatcontainer/${NAME,,}/${VER}/${NAME,,}.${VER}.nupkg" -o /dev/null
